---
    layout: post
    title: d3
    next: purejs-controllers.html
---

This lesson covers:
* "No Dependencies":#dependencies
* "XMLHttpRequest":#xhr
* "Forms":#forms
* "Form Data":#formdata

h2(#dependencies). When To Have No Dependencies

Sometimes you are writing a library, or code you are going to be using all over the place. Maybe you want this to be the last time you ever write these functions. You want to know that no matter what, no matter what API changes are made to a different library, no matter how much your data set will change, this code will always work as expected. If I give it an object with strings, it will always give me an array with numbers. 

As another point, I have found pure javascript, without using other libraries, to be much less expensive, performance wise. It is easy to use jQuery or underscore, or even Backbone, to an extreme. This creates code that runs slow. Every once in a while, you run into a situation that no one else has 

h2(#xhr). XMLHTTPRequest

The "XMLHttpRequest":http://en.wikipedia.org/wiki/XMLHttpRequest object has an interesting history, in my opinion. Basically, it allows websites to make another request, after the initial request that loads the page. It is javascript, at a very core level. You need to think object oriented. 

Side note: one of the things people did not like about jQuery, early on, was that it simplified XMLHTTPRequest, the DOM and other things so much it was more of a simple scripting language instead of the watered down object oriented language it was before. 

Lets jump right in. How do we make a request like we did at the very beginning.

<pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "/product/total", true);
xhr.responseType = "arraybuffer"; 
xhr.onload = function(e) {
  var arraybuffer = xhr.response; // not responseText
  /* ... */
}
xhr.send();
</pre>

h2(#forms). Forms

h3. document.forms

h3. 

h2(#formdata). FormData

the "FormData" object is relatively new, but it fixes one of fundemental bugs with the XMLHTTPRequest. With the FormData object you can now upload files in a clean way in javascript and AJAX. 